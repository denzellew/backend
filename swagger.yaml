tags:
- name: pokemon
  description: users API

paths:
# [GET] pokemon
  /pokemon:
    get:
      tags:
      - pokemon
      summary: Query Pokemon
      parameters:
        - name: name
          in: query
          schema:
          - type: string
          description: Contained in name
        - name: offset
          in: query
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - name: limit
          in: query
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'


# [POST] pokemon/refresh
  /pokemon/refresh:
    post:
      tags:
      - pokemon
      summary: Refresh Pokemon
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] pokemon/id
  /pokemon/{id}:
    get:
      tags:
      - pokemon
      summary: Find Pokemon By Id
      parameters:
      - name: id
        in: path
        description: Pokemon Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'


# [DELETE] pokemon/id
    delete:
      tags:
      - pokemon
      summary: Delete Pokemon By Id
      parameters:
      - name: id
        in: path
        description: pokemon Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# # [POST] users
#     post:
#       tags:
#       - users
#       summary: Add User
#       parameters:
#       - name: body
#         in: body
#         description: user Data
#         required: true
#         schema:
#           $ref: '#/definitions/users'
#       responses:
#         201:
#           description: 'Created'
#         400:
#           description: 'Bad Request'
#         409:
#           description: 'Conflict'
#         500:
#           description: 'Server Error'

# # [GET] users/id
#   /users/{id}:
#     get:
#       tags:
#       - users
#       summary: Find User By Id
#       parameters:
#       - name: id
#         in: path
#         description: User Id
#         required: true
#       responses:
#         200:
#           description: 'OK'
#         409:
#           description: 'Conflict'
#         500:
#           description: 'Server Error'

# # [PUT] users/id
#     put:
#       tags:
#       - users
#       summary: Update User By Id
#       parameters:
#       - name: id
#         in: path
#         description: user Id
#         required: true
#       - name: body
#         in: body
#         description: user Data
#         required: true
#         schema:
#           $ref: '#/definitions/users'
#       responses:
#         200:
#           description: 'OK'
#         400:
#           description: 'Bad Request'
#         409:
#           description: 'Conflict'
#         500:
#           description: 'Server Error'

# # [DELETE] users/id
#     delete:
#       tags:
#       - users
#       summary: Delete User By Id
#       parameters:
#       - name: id
#         in: path
#         description: user Id
#         required: true
#       responses:
#         200:
#           description: 'OK'
#         409:
#           description: 'Conflict'
#         500:
#           description: 'Server Error'

# # definitions
# definitions:
#   users:
#     type: object
#     required:
#         - email
#         - password
#     properties:
#       email:
#         type: string
#         description: user Email
#       password:
#         type: string
#         description: user Password

# schemes:
#  - https
#  - http


# tags:
# - name: pokemon
#   description: pokemon API

# paths:
# # [GET] pokemon
#   /pokemon:
#     get:
#       tags:
#       - pokemon
#       summary: Find Pokemon
#       - name: name
#         in: query
#         schema:
#           type: string
#         description: Contained in name
#       - in: query
#           name: offset
#           schema:
#             type: integer
#           description: The number of items to skip before starting to collect the result set
#       - in: query
#         name: limit
#         schema:
#           type: integer
#         description: The numbers of items to return
#       responses:
#         200:
#           description: 'OK'
#         500:
#           description: 'Server Error'

# # [POST] pokemon/refresh
#   /pokemon/refresh:
#     post:
#       tags:
#       - pokemon
#       summary: Refresh Pokemon
#       responses:
#         201:
#           description: 'Created'
#         400:
#           description: 'Bad Request'
#         409:
#           description: 'Conflict'
#         500:
#           description: 'Server Error'

# # [GET] pokemon/id
#   /pokemon/{id}:
#     get:
#       tags:
#       - pokemon
#       summary: Find Pokemon By Id
#       parameters:
#       - name: id
#         in: path
#         description: Pokemon Id
#         required: true
#       responses:
#         200:
#           description: 'OK'
#         409:
#           description: 'Conflict'
#         500:
#           description: 'Server Error'


# # [DELETE] pokemon/id
#     pokemon/delete:
#       tags:
#       - pokemon
#       summary: Delete Pokemon By Id
#       parameters:
#       - name: id
#         in: path
#         description: pokemon Id
#         required: true
#       responses:
#         200:
#           description: 'OK'
#         409:
#           description: 'Conflict'
#         500:
#           description: 'Server Error'

schemes:
 - https
 - http
